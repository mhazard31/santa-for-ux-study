apply plugin: 'io.fabric'
apply plugin: 'realm-android'

class SlowPlugin implements Plugin<Project> {
    void apply(Project project) {
        // simulating heavy computations
        Thread.sleep(2000)
    }
}
apply plugin: SlowPlugin

@CacheableTask
abstract class GenerateExtraResources extends DefaultTask {
    @InputDirectory
    abstract DirectoryProperty getInputDir()

    @OutputDirectory
    abstract DirectoryProperty getOutputDir()

    @TaskAction
    def run() {
        for (File f: getOutputDir().get().asFile.listFiles()) {
            f.delete()
        }
    }
}

task generateExtraResources(type: GenerateExtraResources) {
    inputDir = file("$buildDir/intermediates/res/merged/debug")
    outputDir = file("$buildDir/intermediates/res/merged/debug")
}

dependencies {
    implementation 'com.google.auto.value:auto-value-annotations:1.6.2'
    annotationProcessor 'com.google.auto.value:auto-value:1.6.2'
}

afterEvaluate { project ->
    android.applicationVariants.all { variant ->
        def packageTask = tasks.getByPath("package${variant.name.capitalize()}")
        generateExtraResources.dependsOn packageTask

        def assembleTask = tasks.getByPath("assemble${variant.name.capitalize()}")
        assembleTask.dependsOn generateExtraResources
    }
}